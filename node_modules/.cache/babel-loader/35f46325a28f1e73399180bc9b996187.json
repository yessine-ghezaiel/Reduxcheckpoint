{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yessine\\\\Desktop\\\\GoMyCode\\\\reduxcheckpoint\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from \"react-redux\";\nimport useState from 'react';\nimport '../App.css';\nimport { deleteToDo } from '../Redux/actions/todoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todo\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"description\",\n    children: [editable ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: newDescription,\n      onChange: e => {\n        setNewDescription(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      style: {\n        textDecoration: todo.isDone ? \"line-through\" : \"none\"\n      },\n      children: todo.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"description\",\n      children: todo.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => {\n        dispatch(updateToDo({ ...task,\n          description: newDescription\n        }));\n\n        if (editable) {\n          setNewDescription(task.description);\n        }\n\n        setEditable(!editable);\n      },\n      children: editable ? \"Update\" : \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => dispatch(deleteToDo(todo.id)),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/components/Todo.js"],"names":["React","Button","useDispatch","useState","deleteToDo","Todo","todo","dispatch","editable","newDescription","e","setNewDescription","target","value","textDecoration","isDone","desc","updateToDo","task","description","setEditable","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,MAAV,QAAwB,iBAAxB;AACA,SAAUC,WAAV,QAA6B,aAA7B;AACA,OAAOC,QAAP,MAAqB,OAArB;AAEA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,8BAA3B;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAEzB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAMI,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACKM,QAAQ,gBACL;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,SAAS,EAAC,cAFV;AAGA,MAAA,KAAK,EAAEC,cAHP;AAIA,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACbC,QAAAA,iBAAiB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAjB;AACH;AAND;AAAA;AAAA;AAAA;AAAA,YADK,gBAUL;AAAG,MAAA,SAAS,EAAC,aAAb;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAER,IAAI,CAACS,MAAL,GAAc,cAAd,GAA+B;AAAjD,OAAlC;AAAA,gBACCT,IAAI,CAACU;AADN;AAAA;AAAA;AAAA;AAAA,YAXR,eAgBQ;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA8BV,IAAI,CAACU;AAAnC;AAAA;AAAA;AAAA;AAAA,YAhBR,eAiBQ,QAAC,MAAD;AACA,MAAA,IAAI,EAAC,OADL;AAEA,MAAA,KAAK,EAAC,SAFN;AAGA,MAAA,OAAO,EAAE,MAAM;AACfT,QAAAA,QAAQ,CAACU,UAAU,CAAC,EAAE,GAAGC,IAAL;AAAWC,UAAAA,WAAW,EAAEV;AAAxB,SAAD,CAAX,CAAR;;AACA,YAAID,QAAJ,EAAc;AACVG,UAAAA,iBAAiB,CAACO,IAAI,CAACC,WAAN,CAAjB;AACH;;AACDC,QAAAA,WAAW,CAAC,CAACZ,QAAF,CAAX;AACC,OATD;AAAA,gBAWCA,QAAQ,GAAG,QAAH,GAAc;AAXvB;AAAA;AAAA;AAAA;AAAA,YAjBR,eA6BQ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAmC,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACH,UAAU,CAACE,IAAI,CAACe,EAAN,CAAX,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA3CD;;GAAMhB,I;UAEWH,W;;;KAFXG,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport {  Button } from 'react-bootstrap'\r\nimport {  useDispatch } from \"react-redux\";\r\nimport useState from 'react'\r\n\r\nimport '../App.css'\r\nimport { deleteToDo } from '../Redux/actions/todoActions';\r\n\r\n\r\nconst Todo = ({todo}) => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"description\" >\r\n            {editable ? (\r\n                <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={newDescription}\r\n                onChange={(e) => {\r\n                    setNewDescription(e.target.value);\r\n                }}\r\n                />\r\n            ) : (\r\n                <p className=\"description\" style={{ textDecoration: todo.isDone ? \"line-through\" : \"none\" }}>\r\n                {todo.desc}\r\n                </p>\r\n            )}\r\n\r\n                <h1 className=\"description\" >{todo.desc}</h1>\r\n                <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                dispatch(updateToDo({ ...task, description: newDescription }));\r\n                if (editable) {\r\n                    setNewDescription(task.description);\r\n                }\r\n                setEditable(!editable);\r\n                }}\r\n            >\r\n                {editable ? \"Update\" : \"Edit\"}</Button>\r\n                <Button variant=\"danger\" size='sm' onClick={() => dispatch(deleteToDo(todo.id))} >Delete</Button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}