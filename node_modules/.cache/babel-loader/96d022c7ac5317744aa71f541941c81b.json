{"ast":null,"code":"import { ADD_TODO, DELETE_TODO } from \"../actions/todoTypes\";\nconst initState = {\n  todoList: []\n};\nlet todoList;\n\nconst todoReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TODO:\n      return { ...state,\n        todoList: [...state.todoList, payload]\n      };\n\n    case DELETE_TODO:\n      todoList = [...state.todoList];\n      todoList = state.todoList.filter(todo => todo.id !== payload);\n      return todoList;\n\n    case UPDATE_TODO:\n      newTask = [...state];\n      let index = -1;\n\n      for (let i = 0; i < newTask.length; i++) {\n        index++;\n\n        if (newTask[i].id === action.payload.id) {\n          break;\n        }\n      }\n\n      if (index !== -1) {\n        newTask[index] = action.payload;\n        return newTask;\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/Redux/reducers/todoReducer.js"],"names":["ADD_TODO","DELETE_TODO","initState","todoList","todoReducer","state","type","payload","filter","todo","id","UPDATE_TODO","newTask","index","i","length","action"],"mappings":"AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAsC,sBAAtC;AAEA,MAAMC,SAAS,GAAC;AACZC,EAAAA,QAAQ,EAAC;AADG,CAAhB;AAGA,IAAIA,QAAJ;;AACA,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACH,SAAP,EAAiB;AAACI,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAjB,KAAkC;AAChD,UAAOD,IAAP;AACI,SAAKN,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,QAAQ,EAAC,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAmBI,OAAnB;AAFN,OAAP;;AAIA,SAAKN,WAAL;AACIE,MAAAA,QAAQ,GAAG,CAAC,GAAGE,KAAK,CAACF,QAAV,CAAX;AACAA,MAAAA,QAAQ,GAAGE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,OAA5C,CAAX;AACA,aAAOJ,QAAP;;AACA,SAAKQ,WAAL;AACIC,MAAAA,OAAO,GAAG,CAAC,GAAGP,KAAJ,CAAV;AACA,UAAIQ,KAAK,GAAG,CAAC,CAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCD,QAAAA,KAAK;;AACL,YAAID,OAAO,CAACE,CAAD,CAAP,CAAWJ,EAAX,KAAkBM,MAAM,CAACT,OAAP,CAAeG,EAArC,EAAyC;AACvC;AACD;AACF;;AACD,UAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,QAAAA,OAAO,CAACC,KAAD,CAAP,GAAiBG,MAAM,CAACT,OAAxB;AACA,eAAOK,OAAP;AACD;;AACD;;AAEZ;AACI,aAAOP,KAAP;AA1BR;AA6BH,CA9BD;;AAmCA,eAAeD,WAAf","sourcesContent":["import  { ADD_TODO, DELETE_TODO} from \"../actions/todoTypes\"\r\n\r\nconst initState={\r\n    todoList:[],\r\n}\r\nlet todoList\r\nconst todoReducer=(state=initState,{type,payload})=>{\r\n    switch(type){\r\n        case ADD_TODO:\r\n            return {\r\n                ...state,\r\n                todoList:[...state.todoList,payload]\r\n            }\r\n            case DELETE_TODO:\r\n                todoList = [...state.todoList];\r\n                todoList = state.todoList.filter((todo) => todo.id !== payload);\r\n                return todoList;\r\n                case UPDATE_TODO:\r\n                    newTask = [...state];\r\n                    let index = -1;\r\n                    for (let i = 0; i < newTask.length; i++) {\r\n                      index++;\r\n                      if (newTask[i].id === action.payload.id) {\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (index !== -1) {\r\n                      newTask[index] = action.payload;\r\n                      return newTask;\r\n                    }\r\n                    break;\r\n    \r\n        default:\r\n            return state\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default todoReducer;\r\n"]},"metadata":{},"sourceType":"module"}