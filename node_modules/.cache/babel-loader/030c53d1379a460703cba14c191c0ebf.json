{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"../actions/todoTypes\";\nconst initState = {\n  todoList: []\n};\nlet todoList;\nlet newTask;\n\nconst todoReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TODO:\n      return { ...state,\n        todoList: [...state.todoList, payload]\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todoList: state.todoList.filter(todo => todo.id !== payload)\n      };\n\n    case UPDATE_TODO:\n      newTask = [...state.todoList];\n      let index = -1;\n\n      for (let i = 0; i < newTask.length; i++) {\n        index++;\n\n        if (newTask[i].id === payload.id) {\n          break;\n        }\n      }\n\n      if (index !== -1) {\n        newTask[index] = payload;\n        return newTask;\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/Redux/reducers/todoReducer.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","initState","todoList","newTask","todoReducer","state","type","payload","filter","todo","id","index","i","length"],"mappings":"AAAA,SAAUA,QAAV,EAAoBC,WAApB,EAAiCC,WAAjC,QAAmD,sBAAnD;AAEA,MAAMC,SAAS,GAAC;AACZC,EAAAA,QAAQ,EAAC;AADG,CAAhB;AAGA,IAAIA,QAAJ;AACA,IAAIC,OAAJ;;AAEA,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACJ,SAAP,EAAiB;AAACK,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAjB,KAAkC;AAChD,UAAOD,IAAP;AACI,SAAKR,QAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,QAAQ,EAAC,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAmBK,OAAnB;AAFN,OAAP;;AAIA,SAAKR,WAAL;AACI,aAAM,EACN,GAAGM,KADG;AAENH,QAAAA,QAAQ,EAAGG,KAAK,CAACH,QAAN,CAAeM,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,OAA5C;AAFL,OAAN;;AAIJ,SAAKP,WAAL;AACIG,MAAAA,OAAO,GAAG,CAAC,GAAGE,KAAK,CAACH,QAAV,CAAV;AACA,UAAIS,KAAK,GAAG,CAAC,CAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCD,QAAAA,KAAK;;AACL,YAAIR,OAAO,CAACS,CAAD,CAAP,CAAWF,EAAX,KAAkBH,OAAO,CAACG,EAA9B,EAAkC;AAClC;AACC;AACJ;;AACD,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdR,QAAAA,OAAO,CAACQ,KAAD,CAAP,GAAiBJ,OAAjB;AACA,eAAOJ,OAAP;AACH;;AACD;;AAER;AACI,aAAOE,KAAP;AA3BR;AA8BH,CA/BD;;AAoCA,eAAeD,WAAf","sourcesContent":["import  { ADD_TODO, DELETE_TODO, UPDATE_TODO} from \"../actions/todoTypes\"\r\n\r\nconst initState={\r\n    todoList:[],\r\n}\r\nlet todoList;\r\nlet newTask;\r\n\r\nconst todoReducer=(state=initState,{type,payload})=>{\r\n    switch(type){\r\n        case ADD_TODO:\r\n            return {\r\n                ...state,\r\n                todoList:[...state.todoList,payload]\r\n                }\r\n            case DELETE_TODO:\r\n                return{\r\n                ...state,\r\n                todoList : state.todoList.filter((todo) => todo.id !== payload)\r\n                }\r\n            case UPDATE_TODO:\r\n                newTask = [...state.todoList];\r\n                let index = -1;\r\n                for (let i = 0; i < newTask.length; i++) {\r\n                    index++;\r\n                    if (newTask[i].id === payload.id) {\r\n                    break;\r\n                    }\r\n                }\r\n                if (index !== -1) {\r\n                    newTask[index] = payload;\r\n                    return newTask;\r\n                }\r\n                break;\r\n    \r\n        default:\r\n            return state\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default todoReducer;\r\n"]},"metadata":{},"sourceType":"module"}