{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yessine\\\\Desktop\\\\GoMyCode\\\\reduxcheckpoint\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddTask from './components/AddTask';\nimport ListToDo from './ListToDo';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const todos = useSelector(state => state.todoList);\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const filterTodo = (list, filter) => {\n    switch (filter) {\n      case \"done\":\n        return list.filter(elm => elm.isDone);\n\n      case \"unDone\":\n        return list.filter(elm => !elm.isDone);\n\n      default:\n        return list;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div1\",\n        className: \"App_todoContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ListToDo, {\n          todoList: filterTodo(todos.todoList, filter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"flex-start\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"secondary\",\n            onClick: () => setFilter(\"done\")\n            /* filterDone() */\n            ,\n            children: [\" \", \"Done\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"secondary\",\n            onClick: () => setFilter(\"unDone\")\n            /*  filterUnDone() */\n            ,\n            children: [\" \", \"UnDone\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"secondary\",\n            onClick: () => setFilter(\"default\")\n            /*  filterUnDone() */\n            ,\n            children: [\" \", \"All\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"qcHhBPvmYKjPKOJH2Cf3iu0PgHY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/App.js"],"names":["React","useState","useDispatch","useSelector","AddTask","ListToDo","Button","App","todos","state","todoList","dispatch","filter","setFilter","filterTodo","list","elm","isDone","display","justifyContent","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AACA,SAAUC,MAAV,QAAwB,iBAAxB;;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAzB;AACA,QAAMC,QAAQ,GAACT,WAAW,EAA1B;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMa,UAAU,GAAG,CAACC,IAAD,EAAOH,MAAP,KAAkB;AACnC,YAAQA,MAAR;AACE,WAAK,MAAL;AACE,eAAOG,IAAI,CAACH,MAAL,CAAaI,GAAD,IAASA,GAAG,CAACC,MAAzB,CAAP;;AACF,WAAK,QAAL;AACE,eAAOF,IAAI,CAACH,MAAL,CAAaI,GAAD,IAAS,CAACA,GAAG,CAACC,MAA1B,CAAP;;AACF;AACE,eAAOF,IAAP;AANJ;AAQD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,mBAAzB;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAED,UAAU,CAACN,KAAK,CAACE,QAAP,EAAiBE,MAAjB;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAE;AACLM,YAAAA,OAAO,EAAE,MADJ;AAELC,YAAAA,cAAc,EAAE,eAFX;AAGLC,YAAAA,UAAU,EAAE;AAHP,WADT;AAAA,kCAOE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,WAFR;AAGE,YAAA,OAAO,EAAE,MAAMP,SAAS,CAAC,MAAD;AAAS;AAHnC;AAAA,uBAKG,GALH,UAMO,GANP;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAeE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,WAFR;AAGE,YAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,QAAD;AAAW;AAHrC;AAAA,uBAKG,GALH,YAMS,GANT;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAuBE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,WAFR;AAGE,YAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,SAAD;AAAY;AAHtC;AAAA,uBAKG,GALH,SAMM,GANN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CH,CA7DD;;GAAMN,G;UACYJ,W,EACCD,W;;;KAFbK,G;AA8DN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport AddTask from './components/AddTask'\nimport ListToDo from './ListToDo'\nimport './App.css'\nimport {  Button } from 'react-bootstrap'\n\n\n\n\n\nconst App = () => {\n    const todos = useSelector(state => state.todoList)    \n    const dispatch=useDispatch()\n    const [filter, setFilter] = useState(\"\");\n    const filterTodo = (list, filter) => {\n      switch (filter) {\n        case \"done\":\n          return list.filter((elm) => elm.isDone);\n        case \"unDone\":\n          return list.filter((elm) => !elm.isDone);\n        default:\n          return list;\n      }\n    };\n    return (\n      <div className=\"App\">\n        <AddTask></AddTask>\n\n        \n        <div className=\"App_Container\">\n          <div id=\"div1\" className=\"App_todoContainer\">\n            <ListToDo todoList={filterTodo(todos.todoList, filter)} />\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => setFilter(\"done\") /* filterDone() */}\n              >\n                {\" \"}\n                Done{\" \"}\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => setFilter(\"unDone\") /*  filterUnDone() */}\n              >\n                {\" \"}\n                UnDone{\" \"}\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                onClick={() => setFilter(\"default\") /*  filterUnDone() */}\n              >\n                {\" \"}\n                All{\" \"}\n              </Button>\n            </div>\n          </div>\n          </div>\n\n\n        {/* <ListToDo todoList={todos.todoList} /> */}\n      </div>\n    )\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}