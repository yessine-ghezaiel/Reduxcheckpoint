{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yessine\\\\Desktop\\\\GoMyCode\\\\reduxcheckpoint\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from \"react-redux\";\nimport { Checkbox } from \"@material-ui/core\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todo\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [editable, setEditable] = useState(false);\n  const [newDescription, setNewDescription] = useState(todo.desc);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"description\",\n    children: [editable ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: newDescription,\n      onChange: e => {\n        setNewDescription(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"description\",\n      children: todo.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      size: \"sm\",\n      onClick: () => {\n        dispatch(updateToDo({ ...todo,\n          description: newDescription\n        }));\n\n        if (editable) {\n          setNewDescription(todo.description);\n        }\n\n        setEditable(!editable);\n      },\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => dispatch(deleteToDo(todo.id)),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"ku9OfQE2ntQd3gfv4WidAXWuEZk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/components/Todo.js"],"names":["React","Button","useDispatch","Checkbox","Todo","todo","dispatch","editable","setEditable","useState","newDescription","setNewDescription","desc","e","target","value","updateToDo","description","deleteToDo","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,MAAV,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAwB,mBAAxB;AAEA,OAAO,YAAP;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAEzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACE,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAACJ,IAAI,CAACO,IAAN,CAApD;AAIE,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eAMSL,QAAQ,gBACL;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,SAAS,EAAC,cAFV;AAGA,MAAA,KAAK,EAAEG,cAHP;AAIA,MAAA,QAAQ,EAAGG,CAAD,IAAO;AACjBF,QAAAA,iBAAiB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACC;AAND;AAAA;AAAA;AAAA;AAAA,YADK,gBASJ;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA8BV,IAAI,CAACO;AAAnC;AAAA;AAAA;AAAA;AAAA,YAfb,eAgBQ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA6B,MAAA,IAAI,EAAC,IAAlC;AAAuC,MAAA,OAAO,EAAE,MAAM;AACtDN,QAAAA,QAAQ,CAACU,UAAU,CAAC,EAAE,GAAGX,IAAL;AAAWY,UAAAA,WAAW,EAAEP;AAAxB,SAAD,CAAX,CAAR;;AACA,YAAIH,QAAJ,EAAc;AACVI,UAAAA,iBAAiB,CAACN,IAAI,CAACY,WAAN,CAAjB;AACH;;AACDT,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACC,OAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBR,eAuBQ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAmC,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACY,UAAU,CAACb,IAAI,CAACc,EAAN,CAAX,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CArCD;;GAAMf,I;UAEWF,W;;;KAFXE,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport {  Button } from 'react-bootstrap'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Checkbox} from \"@material-ui/core\";\r\n\r\nimport '../App.css'\r\nconst Todo = ({todo}) => {\r\n\r\nconst dispatch = useDispatch();\r\n  const [editable, setEditable] = useState(false);\r\n  const [newDescription, setNewDescription] = useState(todo.desc);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"description\" >\r\n            {/* <Checkbox\r\n                checked={todo.isDone}\r\n                onChange={() => dispatch(toogleToDo(todo.id))}\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            /> */}\r\n                {editable ? (\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={newDescription}\r\n                    onChange={(e) => {\r\n                    setNewDescription(e.target.value);\r\n                    }}\r\n                    />\r\n                ) : (<h1 className=\"description\" >{todo.desc}</h1>)}\r\n                <Button variant=\"secondary\"  size='sm' onClick={() => {\r\n                dispatch(updateToDo({ ...todo, description: newDescription }));\r\n                if (editable) {\r\n                    setNewDescription(todo.description);\r\n                }\r\n                setEditable(!editable);\r\n                }} >Edit</Button>\r\n                <Button variant=\"danger\" size='sm' onClick={() => dispatch(deleteToDo(todo.id))} >Delete</Button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}