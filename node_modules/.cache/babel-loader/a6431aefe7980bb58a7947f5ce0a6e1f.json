{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, UPDATE_TODO, FILTER_TODO, TOGGLE_DONE } from \"./todoTypes\";\nexport const addTodo = newToDo => {\n  if (newToDo.desc.trim() == '') return {\n    type: 'ADD_FAIL'\n  }; // to make the input doesbt accept add when it is empty\n  else return {\n      type: ADD_TODO,\n      payload: newToDo // the payload tooks the new todo \n\n    };\n};\nexport const deleteToDo = id => {\n  return {\n    type: DELETE_TODO,\n    payload: id\n  };\n};\nexport function updateToDo(task) {\n  return {\n    type: UPDATE_TODO,\n    payload: task\n  };\n}\nexport const filterToDo = done => {\n  return {\n    type: FILTER_TODO,\n    payload: done\n  };\n};\nexport const toggletodo = id => {\n  return {\n    type: TOGGLE_DONE,\n    payload: id\n  };\n};","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/Redux/actions/todoActions.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","FILTER_TODO","TOGGLE_DONE","addTodo","newToDo","desc","trim","type","payload","deleteToDo","id","updateToDo","task","filterToDo","done","toggletodo"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAA+BC,WAA/B,EAA4CC,WAA5C,EAAyDC,WAAzD,QAA2E,aAA3E;AAEA,OAAO,MAAMC,OAAO,GAAEC,OAAD,IAAW;AAC5B,MAAIA,OAAO,CAACC,IAAR,CAAaC,IAAb,MAAuB,EAA3B,EAA+B,OAAO;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAP,CAA/B,CACA;AADA,OAGK,OAAM;AACPA,MAAAA,IAAI,EAACT,QADE;AAEPU,MAAAA,OAAO,EAACJ,OAFD,CAGP;;AAHO,KAAN;AAMR,CAVM;AAYP,OAAO,MAAMK,UAAU,GAAEC,EAAD,IAAQ;AAC5B,SAAO;AACHH,IAAAA,IAAI,EAAER,WADH;AAEHS,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAID,CALI;AAOP,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC7B,SAAO;AACLL,IAAAA,IAAI,EAAEP,WADD;AAELQ,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAIH;AACD,OAAO,MAAMC,UAAU,GAAEC,IAAD,IAAU;AAC9B,SAAO;AACHP,IAAAA,IAAI,EAAEN,WADH;AAEHO,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,UAAU,GAAEL,EAAD,IAAQ;AAC5B,SAAO;AACHH,IAAAA,IAAI,EAAEL,WADH;AAEHM,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM","sourcesContent":["import { ADD_TODO, DELETE_TODO,UPDATE_TODO, FILTER_TODO, TOGGLE_DONE} from \"./todoTypes\"\r\n\r\nexport const addTodo=(newToDo)=>{\r\n    if (newToDo.desc.trim() == '') return {type:'ADD_FAIL'}\r\n    // to make the input doesbt accept add when it is empty\r\n    \r\n    else return{\r\n        type:ADD_TODO,\r\n        payload:newToDo\r\n        // the payload tooks the new todo \r\n\r\n    }\r\n}\r\n\r\nexport const deleteToDo=(id) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        payload: id\r\n    }\r\n  }\r\n\r\nexport function updateToDo(task) {\r\n    return {\r\n      type: UPDATE_TODO,\r\n      payload: task\r\n    }\r\n}\r\nexport const filterToDo=(done) => {\r\n    return {\r\n        type: FILTER_TODO,\r\n        payload: done\r\n    }\r\n}\r\n\r\nexport const toggletodo=(id) => {\r\n    return {\r\n        type: TOGGLE_DONE,\r\n        payload: id\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}