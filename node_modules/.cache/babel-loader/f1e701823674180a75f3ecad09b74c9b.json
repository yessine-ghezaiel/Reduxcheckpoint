{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yessine\\\\Desktop\\\\GoMyCode\\\\reduxcheckpoint\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch } from \"react-redux\";\nimport { useState } from 'react';\nimport '../App.css';\nimport { deleteToDo, toggletodo, updateToDo } from '../Redux/actions/todoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todo\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [edit, setEdit] = useState(false);\n  const [newDesc, setNewDesc] = useState(todo.desc);\n  const [done, setDone] = useState(todo.isDone);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"description\",\n    style: {\n      backgroundColor: todo.isDone ? 'lightgreen' : 'tomato'\n    },\n    children: [edit ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: \"true\",\n      value: newDesc,\n      onChange: e => {\n        setNewDesc(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: todo.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"toggleSwitch\",\n      id: \"toggleSwitch\",\n      style: {\n        height: 20,\n        width: 20,\n        margin: 10,\n        marginButtom: 10\n      },\n      onClick: () => {\n        dispatch(toggletodo(todo.id));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"sm\",\n      color: \"primary\",\n      onClick: () => {\n        dispatch(updateToDo({ ...todo,\n          desc: newDesc\n        }));\n\n        if (edit) {\n          setNewDesc(todo.desc);\n        }\n\n        setEdit(!edit);\n      },\n      children: edit ? \"Update\" : \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => dispatch(deleteToDo(todo.id)),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"26GYe4OwgJDFfAEjpMdjkyPzuiI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/yessine/Desktop/GoMyCode/reduxcheckpoint/src/components/Todo.js"],"names":["React","Button","useDispatch","useState","deleteToDo","toggletodo","updateToDo","Todo","todo","dispatch","edit","setEdit","newDesc","setNewDesc","desc","done","setDone","isDone","backgroundColor","e","target","value","height","width","margin","marginButtom","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,MAAV,QAAwB,iBAAxB;AACA,SAAUC,WAAV,QAA6B,aAA7B;AACA,SAASC,QAAT,QAA0B,OAA1B;AAEA,OAAO,YAAP;AACA,SAASC,UAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,QAAmD,8BAAnD;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAErB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACK,IAAI,CAACM,IAAN,CAAtC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACK,IAAI,CAACS,MAAN,CAAhC;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAEV,IAAI,CAACS,MAAL,GAAc,YAAd,GAA6B;AAA/C,KAApC;AAAA,eACKP,IAAI,gBACD;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,QAAQ,EAAC,MAFT;AAGA,MAAA,KAAK,EAAEE,OAHP;AAIA,MAAA,QAAQ,EAAGO,CAAD,IAAO;AACbN,QAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH;AAND;AAAA;AAAA;AAAA;AAAA,YADC,gBAUD;AAAA,gBACCb,IAAI,CAACM;AADN;AAAA;AAAA;AAAA;AAAA,YAXR,eAeQ;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,cAFT;AAGI,MAAA,EAAE,EAAC,cAHP;AAII,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAC,EAAT;AAAYC,QAAAA,KAAK,EAAC,EAAlB;AAAsBC,QAAAA,MAAM,EAAC,EAA7B;AAAgCC,QAAAA,YAAY,EAAC;AAA7C,OAJX;AAKI,MAAA,OAAO,EAAE,MAAI;AAAChB,QAAAA,QAAQ,CAACJ,UAAU,CAACG,IAAI,CAACkB,EAAN,CAAX,CAAR;AAA8B;AALhD;AAAA;AAAA;AAAA;AAAA,YAfR,eAuBQ,QAAC,MAAD;AACA,MAAA,IAAI,EAAC,IADL;AAEA,MAAA,KAAK,EAAC,SAFN;AAGA,MAAA,OAAO,EAAE,MAAM;AACfjB,QAAAA,QAAQ,CAACH,UAAU,CAAC,EAAE,GAAGE,IAAL;AAAWM,UAAAA,IAAI,EAAEF;AAAjB,SAAD,CAAX,CAAR;;AACA,YAAIF,IAAJ,EAAU;AACNG,UAAAA,UAAU,CAACL,IAAI,CAACM,IAAN,CAAV;AACH;;AACDH,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACC,OATD;AAAA,gBAWCA,IAAI,GAAG,QAAH,GAAc;AAXnB;AAAA;AAAA;AAAA;AAAA,YAvBR,eAmCQ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAmC,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACL,UAAU,CAACI,IAAI,CAACkB,EAAN,CAAX,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CArDD;;GAAMnB,I;UAEeL,W;;;KAFfK,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport {  Button } from 'react-bootstrap'\r\nimport {  useDispatch } from \"react-redux\";\r\nimport { useState }  from 'react'\r\n\r\nimport '../App.css'\r\nimport { deleteToDo , toggletodo, updateToDo} from '../Redux/actions/todoActions';\r\n\r\n\r\nconst Todo = ({todo}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const [newDesc, setNewDesc] = useState(todo.desc);\r\n    const [done, setDone] = useState(todo.isDone);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"description\" style={{backgroundColor: todo.isDone ? 'lightgreen' : 'tomato'}} >\r\n            {edit ? (\r\n                <input\r\n                type=\"text\"\r\n                required=\"true\"\r\n                value={newDesc}\r\n                onChange={(e) => {\r\n                    setNewDesc(e.target.value);\r\n                }}\r\n                />\r\n            ) : (\r\n                <h2  >\r\n                {todo.desc}\r\n                </h2>\r\n            )}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"toggleSwitch\"\r\n                    id=\"toggleSwitch\"\r\n                    style={{ height:20,width:20, margin:10,marginButtom:10 }}\r\n                    onClick={()=>{dispatch(toggletodo(todo.id))}}\r\n                    />\r\n\r\n                <Button\r\n                size=\"sm\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                dispatch(updateToDo({ ...todo, desc: newDesc }));\r\n                if (edit) {\r\n                    setNewDesc(todo.desc);\r\n                }\r\n                setEdit(!edit);\r\n                }}\r\n            >\r\n                {edit ? \"Update\" : \"Edit\"}</Button>\r\n                <Button variant=\"danger\" size='sm' onClick={() => dispatch(deleteToDo(todo.id))} >Delete</Button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}